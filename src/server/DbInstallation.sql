-- DB installation stuff

-- Drop Existing Tables
DROP TABLE IF EXISTS "UserVotes";
DROP TABLE IF EXISTS "UserSettings";
DROP TABLE IF EXISTS "UserFavorites";
DROP TABLE IF EXISTS "SkillBuilds";

-- Skill Builds
CREATE TABLE "SkillBuilds" (
	"Id" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"Abilities" _text NOT NULL, -- Array of ability IDs
	"Attribute" varchar(3) NOT NULL, -- Attribute that is used (agi, str, int)
	"Description" varchar NOT NULL, -- Entered description
	"HeroName" varchar NOT NULL, -- Hero ID
	"SteamId" varchar NOT NULL, -- SteamID of the submitter
	"Tags" _text NOT NULL, -- Used tags (TODO: figure out what LoD exactly expects here)
	"Title" varchar NOT NULL, -- Entered title
	"Votes_Up" int4 NOT NULL DEFAULT 0, -- Number of upvotes
	"Created" timestamp NULL, -- Date when build was created
	"Votes_Down" int4 NOT NULL DEFAULT 0, -- Number of downvotes
	CONSTRAINT "SkillBuilds_pkey" PRIMARY KEY ("Id")
);
CREATE INDEX skillbuilds_title_idx ON public."SkillBuilds" USING btree ("Title", "Votes_Up");
COMMENT ON COLUMN public."SkillBuilds"."Abilities" IS 'Array of ability IDs';
COMMENT ON COLUMN public."SkillBuilds"."Attribute" IS 'Attribute that is used (agi, str, int)';
COMMENT ON COLUMN public."SkillBuilds"."Description" IS 'Entered description';
COMMENT ON COLUMN public."SkillBuilds"."HeroName" IS 'Hero ID';
COMMENT ON COLUMN public."SkillBuilds"."SteamId" IS 'SteamID of the submitter';
COMMENT ON COLUMN public."SkillBuilds"."Tags" IS 'Used tags (TODO: figure out what LoD exactly expects here)';
COMMENT ON COLUMN public."SkillBuilds"."Title" IS 'Entered title';
COMMENT ON COLUMN public."SkillBuilds"."Votes_Up" IS 'Number of upvotes';
COMMENT ON COLUMN public."SkillBuilds"."Created" IS 'Date when build was created';
COMMENT ON COLUMN public."SkillBuilds"."Votes_Down" IS 'Number of downvotes';

-- User Settings
CREATE TABLE "UserSettings" (
	"SteamId" varchar NOT NULL, -- The Steam ID of the user
	"SettingsContent" varchar NOT NULL, -- Settings JSON
	CONSTRAINT usersettings_pk PRIMARY KEY ("SteamId")
);
CREATE INDEX newtable_steamid_idx ON public."UserSettings" USING btree ("SteamId");
COMMENT ON COLUMN public."UserSettings"."SteamId" IS 'The Steam ID of the user';
COMMENT ON COLUMN public."UserSettings"."SettingsContent" IS 'Settings JSON';

-- User Favorites
CREATE TABLE "UserFavorites" (
	"Id" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"SteamId" varchar NOT NULL, -- The Steam ID of the person who favorited the build
	"SkillBuildId" int4 NOT NULL, -- The (internal) build id the favorite is refering to
	CONSTRAINT "UserFavorites_pkey" PRIMARY KEY ("Id"),
	CONSTRAINT userfavorites_fk FOREIGN KEY ("SkillBuildId") REFERENCES "SkillBuilds"("Id")
);
CREATE INDEX userfavorites_steamid_idx ON public."UserFavorites" USING btree ("SteamId");
COMMENT ON COLUMN public."UserFavorites"."SteamId" IS 'The Steam ID of the person who favorited the build';
COMMENT ON COLUMN public."UserFavorites"."SkillBuildId" IS 'The (internal) build id the favorite is refering to';

-- User Votes
CREATE TABLE "UserVotes" (
	"Id" int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"SteamId" varchar NOT NULL, -- The Steam ID of the voter
	"SkillBuildId" int4 NOT NULL, -- The (internal) build id the vote is refering to
	"Vote" int4 NOT NULL, -- Type of vote (0 = downvote, 1 = upvote)
	CONSTRAINT "UserVotes_pkey" PRIMARY KEY ("Id"),
	CONSTRAINT uservotes_fk FOREIGN KEY ("SkillBuildId") REFERENCES "SkillBuilds"("Id")
);
CREATE INDEX uservotes_steamid_idx ON public."UserVotes" USING btree ("SteamId");
COMMENT ON COLUMN public."UserVotes"."SteamId" IS 'The Steam ID of the voter';
COMMENT ON COLUMN public."UserVotes"."SkillBuildId" IS 'The (internal) build id the vote is refering to';
COMMENT ON COLUMN public."UserVotes"."Vote" IS 'Type of vote (0 = downvote, 1 = upvote)';
